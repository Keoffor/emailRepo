trigger:
- main
variables:
 imageRepo: keoffor/email-app
 tag: $(Build.BuildId)
stages:
- stage: Build
  displayName: build Maven package and Docker images
  pool: ubuntu20
  jobs:
  - job: build
    displayName: build

    steps:
    - task: SonarCloudPrepare@1
      displayName: Sonar Analysis
      inputs:
        SonarCloud: 'obaz-pro'
        organization: 'keoffor'
        scannerMode: 'Other'
        extraProperties: |
          # Additional properties that will be passed to the scanner,
          # Put one key=value per line, example:
          # sonar.exclusions=**/*.bin
          sonar.projectKey=keoffor_emailreimburse
          sonar.projectName=emailreimburse
    - task: Maven@3
      displayName: Maven package
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: true
        isJacocoCoverageReportXML: true
        sqMavenPluginVersionChoice: 'latest'

    - task: Maven@3
      displayName: publish coverage
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        codeCoverageToolOption: 'JaCoCo'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: true
        effectivePomSkip: false
        sonarQubeRunAnalysis: true
        isJacocoCoverageReportXML: true
        sqMavenPluginVersionChoice: 'latest'   

    - task: Docker@2
      inputs:
        containerRegistry: 'docker-pro'
        repository: '$(imageRepo)'
        command: 'buildAndPush'
        Dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        tags: '$(tag)'
    - task: PublishPipelineArtifact@1
      displayName: Publish artifacts
      inputs:
        targetPath: '$(Pipeline.Workspace)/s/Kubernetes'
        artifact: 'manifest'
        publishLocation: 'pipeline'

- stage: deploy
  dependsOn: Build
  displayName: deploy to Aks
  variables:
    emailacr: emailsecret
    replicaNo: 2
#    imageacr: obazacr.azurecr.io
  jobs:
    - deployment: deploy
      pool: ubuntu20
      displayName: Deploy to Testing Env.
      environment: 'obazenv.default'
      strategy:
       runOnce:
        deploy:
          steps:
            - task: DownloadPipelineArtifact@2
              inputs:
                buildType: 'current'
                artifactName: 'manifest'
                targetPath: '$(Pipeline.Workspace)/manifest'
            - task: KubernetesManifest@0
              inputs:
                action: 'createSecret'
                kubernetesServiceConnection: 'obakuber'
                namespace: 'default'
                secretType: 'dockerRegistry'
                secretName: '$(emailacr)'
                dockerRegistryEndpoint: 'docker-pro'
            - task: replacetokens@5
              displayName: replace tokens
              inputs:
                rootDirectory: '$(Pipeline.Workspace)/manifest/'
                targetFiles: 'deployment.yml'
                encoding: 'auto'
                tokenPattern: 'custom'
                tokenPrefix: '#'
                tokenSuffix: '#'
                writeBOM: true
                actionOnMissing: 'warn'
                keepToken: false
                actionOnNoFiles: 'continue'
                enableTransforms: false
                enableRecursion: false
                useLegacyPattern: false
                enableTelemetry: true
            - task: KubernetesManifest@0
              inputs:
                action: 'deploy'
                kubernetesServiceConnection: 'obazenv-myAKSCluster-default-1652353003809'
                namespace: 'default'
                manifests: |
                  $(Pipeline.Workspace)/manifest/deployment.yml
                  $(Pipeline.Workspace)/manifest/service.yml
                containers: '$(imageRepo):$(tag)'


